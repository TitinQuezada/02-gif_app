{"version":3,"sources":["Components/AddCategory/AddCategoryComponent.js","Components/GifCard/GifCardComponent.js","Services/GifService.js","hooks/useFechtGif.js","Components/GifGrid/GifGridComponent.js","GifExpertApp.js","index.js"],"names":["AddCategoryComponent","setCategories","useState","value","setvalue","validateCategory","category","categories","find","cat","onSubmit","event","preventDefault","className","onChange","target","placeholder","GifCardComponent","id","title","image","remove","src","alt","height","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","images","downsized_medium","useFechtGif","loading","setdata","useEffect","then","GifGridComponent","Fragment","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"wRA2CeA,G,MAvCc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACxBC,mBAAS,IADe,mBAC3CC,EAD2C,KACpCC,EADoC,KAiB5CC,EAAmB,SAACC,EAAUC,GAElC,OADgBA,EAAWC,MAAK,SAACC,GAAD,OAASA,IAAQH,MAInD,OACE,0BAAMI,SApBY,SAACC,GACnBA,EAAMC,iBAEFT,IACFF,GAAc,SAACM,GAAD,OACZF,EAAiBF,EAAOI,GAAxB,CACKJ,GADL,mBACeI,IACXA,KAGNH,EAAS,OAWT,2BACES,UAAU,iBACVV,MAAOA,EACPW,SAAU,SAACH,GAAD,OAAWP,EAASO,EAAMI,OAAOZ,QAC3Ca,YAAY,eAEd,4BAAQH,UAAU,cAAlB,aCrBSI,G,MAVU,SAAC,GAAiC,EAA/BC,GAAgC,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAoB,EAAbC,OAC5C,OACE,yBAAKR,UAAU,QACb,yBAAKS,IAAKF,EAAOG,IAAKJ,EAAOK,OAAO,UACpC,2BAAIL,GACJ,iC,+BCROM,EAAO,uCAAG,WAAOnB,GAAP,uBAAAoB,EAAA,6DACfC,EADe,0FAC0EC,UAC7FtB,GAFmB,sBAIHuB,MAAMF,GAJH,cAIfG,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAU,CAC9BjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,MAAOe,EAAIC,OAAOC,iBAAiBV,QAVhB,kBAadM,GAbc,4CAAH,sDCaLK,EAVK,SAAChC,GAAc,IAAD,EACRJ,mBAAS,CAAE+B,KAAM,GAAIM,SAAS,IADtB,mBACzBP,EADyB,KACnBQ,EADmB,KAOhC,OAJAC,qBAAU,WACRhB,EAAQnB,GAAUoC,MAAK,SAACT,GAAD,OAAUO,EAAQ,CAAEP,KAAMA,EAAMM,SAAS,SAC/D,CAACjC,IAEG0B,GCgBMW,EApBU,SAAC,GAAkB,IAAhBrC,EAAe,EAAfA,SAAe,EACfgC,EAAYhC,GAA9B2B,EADiC,EACjCA,KAAMM,EAD2B,EAC3BA,QAEd,OACE,kBAAC,IAAMK,SAAP,KACE,4BAAKtC,GACL,6BACA,yBAAKO,UAAU,OACZ0B,EACG,eACAN,EAAKC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,eAAkBU,IAAKV,EAAIjB,IAAQiB,UCYlDW,EAxBM,WAAO,IAAD,EACW5C,mBAAS,CAC3C,gBACA,YACA,kBAJuB,mBAClBK,EADkB,KACNN,EADM,KAOzB,OACE,kBAAC,IAAM2C,SAAP,KACE,4CACA,kBAAC,EAAD,CACErC,WAAYA,EACZN,cAAeA,IAEjB,6BACA,4BACGM,EAAW2B,KAAI,SAAC5B,GAAD,OACd,kBAAC,EAAD,CAAkBuC,IAAKvC,EAAUA,SAAUA,UChBrDyC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.eb8c1fca.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddCategoryComponent.css';\r\n\r\nconst AddCategoryComponent = ({ setCategories }) => {\r\n  const [value, setvalue] = useState('');\r\n\r\n  const addCategory = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value) {\r\n      setCategories((categories) =>\r\n        validateCategory(value, categories)\r\n          ? [value, ...categories]\r\n          : categories\r\n      );\r\n\r\n      setvalue('');\r\n    }\r\n  };\r\n\r\n  const validateCategory = (category, categories) => {\r\n    const isValid = categories.find((cat) => cat === category) ? false : true;\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addCategory}>\r\n      <input\r\n        className='inputSize mr-2'\r\n        value={value}\r\n        onChange={(event) => setvalue(event.target.value)}\r\n        placeholder='Buscar Gif'\r\n      ></input>\r\n      <button className='buttonSize'>Buscar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategoryComponent.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategoryComponent;\r\n","import React from 'react';\r\nimport './GifCard.Component.css';\r\n\r\nconst GifCardComponent = ({ id, title, image, remove }) => {\r\n  return (\r\n    <div className='card'>\r\n      <img src={image} alt={title} height='100px'></img>\r\n      <p>{title}</p>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifCardComponent;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=GsKlFVs7BUxAGmyrWeKQT2T5zw0D1JU1&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((gif) => ({\r\n    id: gif.id,\r\n    title: gif.title,\r\n    image: gif.images.downsized_medium.url,\r\n  }));\r\n\r\n  return gifs;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../Services/GifService';\r\n\r\nconst useFechtGif = (category) => {\r\n  const [data, setdata] = useState({ gifs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => setdata({ gifs: gifs, loading: false }));\r\n  }, [category]);\r\n\r\n  return data;\r\n};\r\n\r\nexport default useFechtGif;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifCardComponent from '../GifCard/GifCardComponent';\r\nimport './GifGridComponent.css';\r\nimport useFechtGif from '../../hooks/useFechtGif';\r\n\r\nconst GifGridComponent = ({ category }) => {\r\n  const { gifs, loading } = useFechtGif(category);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3>{category}</h3>\r\n      <hr></hr>\r\n      <div className='row'>\r\n        {loading\r\n          ? 'cargando....'\r\n          : gifs.map((gif) => <GifCardComponent key={gif.id} {...gif} />)}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nGifGridComponent.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGridComponent;\r\n","import React, { useState } from 'react';\r\nimport AddCategoryComponent from './Components/AddCategory/AddCategoryComponent';\r\nimport GifGridComponent from './Components/GifGrid/GifGridComponent';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n    'One Punch Man',\r\n    'Samurai x',\r\n    'Dragon Ball Z',\r\n  ]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategoryComponent\r\n        categories={categories}\r\n        setCategories={setCategories}\r\n      />\r\n      <hr></hr>\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGridComponent key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}